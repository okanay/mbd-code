var F=function(W,N){const j=W.locale||"en-US";this.parse=function(X){const M=new Intl.NumberFormat(j),Y=M.format(11111).replace(/1/g,"")||".",Q=M.format(1.1).replace(/1/g,"");return parseFloat(X.replace(new RegExp(" ","g"),"").replace(new RegExp("\\"+Y,"g"),"").replace(new RegExp("\\"+Q),"."))},this.render=function(X){const M=parseInt(N.getAttribute("data-decimals"))||0,Y=N.getAttribute("data-digit-grouping")!=="false";return new Intl.NumberFormat(j,{minimumFractionDigits:M,maximumFractionDigits:M,useGrouping:Y}).format(X)}},q=!1,H=$.fn.val;$.fn.val=function(W){if(arguments.length>=1){for(let N=0;N<this.length;N++)if(this[N]["bootstrap-input-spinner"]&&this[N].setValue){const j=this[N];setTimeout(function(){j.setValue(W)})}}return H.apply(this,arguments)};class O{constructor(W,N){const j=this;this.element=W,this.props={decrementButton:"<strong>&minus;</strong>",incrementButton:"<strong>&plus;</strong>",groupClass:"",buttonsClass:"btn-outline-secondary",buttonsWidth:"2.5rem",textAlign:"center",autoDelay:500,autoInterval:50,buttonsOnly:!1,keyboardStepping:!0,locale:navigator.language,editor:F,template:'<div class="input-group ${groupClass}"><button style="min-width: ${buttonsWidth}" class="btn btn-decrement ${buttonsClass} btn-minus" type="button">${decrementButton}</button><input type="text" inputmode="decimal" style="text-align: ${textAlign}" class="form-control form-control-text-input"/><button style="min-width: ${buttonsWidth}" class="btn btn-increment ${buttonsClass} btn-plus" type="button">${incrementButton}</button></div>'},Object.assign(this.props,N);const X=this.props.template.replace(/\${groupClass}/g,this.props.groupClass).replace(/\${buttonsWidth}/g,this.props.buttonsWidth).replace(/\${buttonsClass}/g,this.props.buttonsClass).replace(/\${decrementButton}/g,this.props.decrementButton).replace(/\${incrementButton}/g,this.props.incrementButton).replace(/\${textAlign}/g,this.props.textAlign);if(this.element["bootstrap-input-spinner"])console.warn("element",this.element,"is already a bootstrap-input-spinner");else{if(this.$original=$(this.element),this.$original[0]["bootstrap-input-spinner"]=!0,this.$original.hide(),this.$original[0].inputSpinnerEditor=new this.props.editor(this.props,this.element),this.autoDelayHandler=null,this.autoIntervalHandler=null,this.$inputGroup=$(X),this.$buttonDecrement=this.$inputGroup.find(".btn-decrement"),this.$buttonIncrement=this.$inputGroup.find(".btn-increment"),this.$input=this.$inputGroup.find("input"),this.$label=$("label[for='"+this.$original.attr("id")+"']"),!this.$label[0])this.$label=this.$original.closest("label");this.min=null,this.max=null,this.step=null,U(),this.value=parseFloat(this.$original[0].value);let z=!1;const J=this.$original.attr("data-prefix")||"",B=this.$original.attr("data-suffix")||"";if(J){const L=$('<span class="input-group-text">'+J+"</span>");this.$inputGroup.find("input").before(L)}if(B){const L=$('<span class="input-group-text">'+B+"</span>");this.$inputGroup.find("input").after(L)}this.$original[0].setValue=function(L){M(L)},this.$original[0].destroyInputSpinner=function(){Y()},this.observer=new MutationObserver(function(){U(),M(j.value,!0)}),this.observer.observe(this.$original[0],{attributes:!0}),this.$original.after(this.$inputGroup),M(this.value),this.$input.on("paste input change focusout",function(L){let Z=j.$input[0].value;const D=L.type==="focusout";if(!j.props.buttonsOnly)Z=j.$original[0].inputSpinnerEditor.parse(Z),M(Z,D),Q(j.$original,L.type);if(j.props.keyboardStepping&&D)R()}).on("keydown",function(L){if(j.props.keyboardStepping){if(L.which===38){if(L.preventDefault(),!j.$buttonDecrement.prop("disabled"))_(j.step)}else if(L.which===40){if(L.preventDefault(),!j.$buttonIncrement.prop("disabled"))_(-j.step)}}}).on("keyup",function(L){if(j.props.keyboardStepping&&(L.which===38||L.which===40))L.preventDefault(),R()}),A(j.$buttonDecrement[0],function(){if(!j.$buttonDecrement.prop("disabled"))z=!0,_(-j.step)}),A(j.$buttonIncrement[0],function(){if(!j.$buttonIncrement.prop("disabled"))z=!0,_(j.step)}),K(document.body,function(){if(z===!0)R(),Q(j.$original,"change"),z=!1})}function M(z,J){if(J===void 0)J=!0;if(isNaN(z)||z===""){if(j.$original[0].value="",J)j.$input[0].value="";j.value=NaN}else{if(z=parseFloat(z),z=Math.min(Math.max(z,j.min),j.max),j.$original[0].value=z,J)j.$input[0].value=j.$original[0].inputSpinnerEditor.render(z);j.value=z}}function Y(){if(j.$original.prop("required",j.$input.prop("required")),j.observer.disconnect(),R(),j.$input.off("paste input change focusout"),j.$inputGroup.remove(),j.$original.show(),j.$original[0]["bootstrap-input-spinner"]=void 0,j.$label[0])j.$label.attr("for",j.$original.attr("id"))}function Q(z,J){if(J)setTimeout(function(){let B;if(typeof Event==="function")B=new Event(J,{bubbles:!0});else B=document.createEvent("Event"),B.initEvent(J,!0,!0);z[0].dispatchEvent(B)})}function _(z){if(G(z),R(),j.props.autoInterval!==void 0)j.autoDelayHandler=setTimeout(function(){j.autoIntervalHandler=setInterval(function(){G(z)},j.props.autoInterval)},j.props.autoDelay)}function G(z){if(isNaN(j.value))j.value=0;M(Math.round(j.value/z)*z+z),Q(j.$original,"input")}function R(){clearTimeout(j.autoDelayHandler),clearTimeout(j.autoIntervalHandler)}function U(){if(j.$original.prop("required"))j.$input.prop("required",j.$original.prop("required")),j.$original.removeAttr("required");j.$input.prop("placeholder",j.$original.prop("placeholder")),j.$input.attr("inputmode",j.$original.attr("inputmode")||"decimal");const z=j.$original.prop("disabled"),J=j.$original.prop("readonly");if(j.$input.prop("disabled",z),j.$input.prop("readonly",J||j.props.buttonsOnly),j.$buttonIncrement.prop("disabled",z||J),j.$buttonDecrement.prop("disabled",z||J),z||J)R();const B=j.$original.prop("class");let L="";if(/form-control-sm/g.test(B))L="input-group-sm";else if(/form-control-lg/g.test(B))L="input-group-lg";const Z=B.replace(/form-control(-(sm|lg))?/g,"");if(j.$inputGroup.prop("class","input-group "+L+" "+j.props.groupClass),j.$input.prop("class","form-control "+Z),j.min=isNaN(j.$original.prop("min"))||j.$original.prop("min")===""?-1/0:parseFloat(j.$original.prop("min")),j.max=isNaN(j.$original.prop("max"))||j.$original.prop("max")===""?1/0:parseFloat(j.$original.prop("max")),j.step=parseFloat(j.$original.prop("step"))||1,j.$original.attr("hidden"))j.$inputGroup.attr("hidden",j.$original.attr("hidden"));else j.$inputGroup.removeAttr("hidden");if(j.$original.attr("id")){if(j.$input.attr("id",j.$original.attr("id")+":input_spinner"),j.$label[0])j.$label.attr("for",j.$input.attr("id"))}}function K(z,J){z.addEventListener("mouseup",function(B){J(B)}),z.addEventListener("touchend",function(B){J(B)}),z.addEventListener("keyup",function(B){if(B.keyCode===32||B.keyCode===13)q=!1,J(B)})}function A(z,J){z.addEventListener("mousedown",function(B){if(B.button===0)B.preventDefault(),J(B)}),z.addEventListener("touchstart",function(B){if(B.cancelable)B.preventDefault();J(B)},{passive:!1}),z.addEventListener("keydown",function(B){if((B.keyCode===32||B.keyCode===13)&&!q)q=!0,J(B)})}}}export{O as InputSpinner};
